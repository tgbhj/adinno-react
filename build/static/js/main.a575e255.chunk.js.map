{"version":3,"sources":["components/Add.jsx","components/Edit.jsx","components/Progress.jsx","components/Members.jsx","components/ErrorBoundary.jsx","components/TableData.jsx","components/Password.jsx","components/Login.jsx","views/index.jsx","router/index.js","index.js"],"names":["Add","useState","visible","setVisble","data","useContext","MyContext","onFinish","values","a","fly","post","qs","stringify","name","manager","members","progress","then","res","status","notification","success","message","description","duration","setTimeout","window","location","reload","error","reason","catch","err","placement","title","arrowPointAtCenter","style","float","marginLeft","marginBottom","disabled","onClick","type","icon","PlusOutlined","footer","onCancel","justify","align","xs","sm","md","lg","xl","xxl","Item","rules","required","placeholder","allowClear","users","map","item","Option","key","mode","TextArea","autoSize","block","htmlType","Edit","setVisible","id","EditOutlined","Progress","PlusCircleOutlined","Members","inANotInB","inBNotInA","b","obj","Object","i","len","length","hasOwnProperty","undefined","arr","Array","per","del","add","value","ErrorBoundary","state","errorInfo","this","setState","whiteSpace","toString","componentStack","props","children","React","Component","createContext","TableData","dataSource","setDataSource","setUsers","setPregress","filters","setFilters","setSearchText","setSearchInput","useEffect","Cookies","get","getData","getUsers","fetchData","tasks","fil","push","text","handleSearch","selectedKeys","confirm","handleReset","clearFilters","handleDelete","row","handleExpand","expanded","record","handleClick","remove","path","domain","document","rowKey","pagination","simple","total","size","pageSize","expandedRowRender","last_update","submitter","moment","format","Provider","marginRight","LogoutOutlined","onExpand","scroll","scrollToFirstRowOnChange","Column","dataIndex","width","filterDropdown","setSelectedKeys","padding","ref","node","onChange","e","target","onPressEnter","display","filterIcon","SearchOutlined","onFilter","toLowerCase","includes","render","span","marginTop","Paragraph","ellipsis","rows","expandable","cancelText","okText","onConfirm","DeleteOutlined","Password","username","password","new","margin","textAlign","fontSize","fontWeight","autoComplete","Login","set","expires","Date","expiry","unescape","replace","position","top","left","right","bottom","bodyStyle","boxShadow","bordered","whitespace","index","Routers","locale","zhCN","exact","component","getElementById"],"mappings":"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","file":"static/js/main.a575e255.chunk.js","sourcesContent":["import React, { Fragment, useState, useContext } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport { MyContext } from './TableData'\n\nfunction Add() {\n    const [visible, setVisble] = useState(false)\n    const data = useContext(MyContext)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/add/', qs.stringify({\n                name: values.name,\n                manager: values.manager,\n                members: values.members,\n                progress: values.progress\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '添加成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '添加失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"添加项目\" arrowPointAtCenter>\n            <div style={{ float: \"left\", marginLeft: 15, marginBottom: 15 }}><Button disabled={visible} onClick={() => setVisble(true)} type=\"primary\" icon={<PlusOutlined />} /></div>\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisble(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='name' rules={[{\n                            required: true, message: '项目名称不能为空'\n                        }]}>\n                            <Input placeholder=\"项目名称\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='manager' rules={[{\n                            required: true, message: '项目负责人不能为空'\n                        }]}>\n                            <Select placeholder=\"项目负责人\" allowClear>\n                                {\n                                    data.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name='members' rules={[{\n                            required: true, message: '项目参与人不能为空'\n                        }]}>\n                            <Select mode=\"multiple\" placeholder=\"项目参与人\" allowClear>\n                                {\n                                    data.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name='progress' rules={[{\n                            required: true, message: '项目进度不能为空'\n                        }]}>\n                            <Input.TextArea autoSize placeholder=\"项目进度\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">保 存</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Add","import React, { Fragment, useState, useContext } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport { EditOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport { MyContext } from './TableData'\n\nfunction Edit() {\n    const [visible, setVisible] = useState(false)\n    const data = useContext(MyContext)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/update/' + data.id + '/', qs.stringify({\n                name: values.name,\n                manager: values.manager\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"修改项目\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<EditOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='name'>\n                            <Input placeholder=\"项目名称\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='manager'>\n                            <Select placeholder=\"项目负责人\" allowClear>\n                                {\n                                    data.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Edit","import React, { Fragment, useState, useContext } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Tooltip, notification } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport { MyContext } from './TableData'\n\nfunction Progress() {\n    const [visible, setVisible] = useState(false)\n    const data = useContext(MyContext)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/progress/' + data.id + '/', qs.stringify({\n                progress: values.progress\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '更新成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '更新失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"更新进度\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<PlusCircleOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='progress' rules={[{\n                            required: true, message: '项目进度不能为空'\n                        }]}>\n                            <Input.TextArea autoSize placeholder=\"项目进度\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Progress","import React, { Fragment, useState, useContext } from 'react'\nimport { Row, Col, Form, Modal, Button, Tooltip, notification, Select } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport { MyContext } from './TableData'\n\nfunction Members() {\n    const [visible, setVisible] = useState(false)\n    const data = useContext(MyContext)\n\n    const onFinish = async values => {\n        const a = data.members\n        const b = values.members\n\n        //a与b不重复的部分\n        function inANotInB(a, b) {\n            const obj = new Object()\n            for (let i = 0, len = a.length; i < len; i++) {\n                obj[a[i]] = 1\n            }\n            for (let i = 0, len = b.length; i < len; i++) {\n                if (obj.hasOwnProperty(b[i])) {\n                    obj[b[i]] = undefined\n                }\n            }\n            const arr = new Array()\n            let i = 0\n            for (let per in obj) {\n                if (obj[per]) {\n                    arr[i++] = per\n                }\n            }\n            return arr\n        }\n\n        //b与a不重复的部分\n        function inBNotInA(a, b) {\n            const obj = new Object()\n            for (let i = 0, len = b.length; i < len; i++) {\n                obj[b[i]] = 1\n            }\n            for (let i = 0, len = a.length; i < len; i++) {\n                if (obj.hasOwnProperty(a[i])) {\n                    obj[a[i]] = undefined\n                }\n            }\n            const arr = new Array()\n            let i = 0\n            for (let per in obj) {\n                if (obj[per]) {\n                    arr[i++] = per\n                }\n            }\n            return arr\n        }\n\n        var del = inANotInB(a, b)\n        var add = inBNotInA(a, b)\n\n        await fly\n            .post('/tasks/members/' + data.id + '/', qs.stringify({\n                add: add,\n                del: del\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"修改参与人\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<PlusCircleOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='members'>\n                            <Select allowClear mode=\"multiple\" placeholder=\"项目参与人\" value={data.members}>\n                                {\n                                    data.users.map(item => {\n                                        return <Select.Option key={item[1]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Members","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        })\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.errorInfo) {\n            // Error path\n            return <div>\n                <h2>Something went wrong</h2>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                    {this.state.error && this.state.error.toString()}\n                    <br />\n                    {this.state.errorInfo.componentStack}\n                </details>\n            </div>\n        }\n        // Normally, just render children\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","import React, { Fragment, useState, useEffect } from 'react'\nimport { Button, Table, notification, Popconfirm, BackTop, Tooltip, Divider, Row, Col, Tag, Timeline, Input, Typography } from 'antd'\nimport { LogoutOutlined, SearchOutlined, DeleteOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport Add from './Add'\nimport Edit from './Edit'\nimport Progress from './Progress'\nimport Members from './Members'\nimport moment from 'moment'\nimport Cookies from 'js-cookie'\nimport ErrorBoundary from './ErrorBoundary'\n\nexport const MyContext = React.createContext(null)\n\nfunction TableData() {\n    const [dataSource, setDataSource] = useState([])\n    const [users, setUsers] = useState([])\n    const [progress, setPregress] = useState([])\n    const [filters, setFilters] = useState([])\n    const [searchText, setSearchText] = useState('')\n    const [searchInput, setSearchInput] = useState('')\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (Cookies.get('name') === undefined) {\n                notification.error({\n                    message: 'Cookie过期，重新登录',\n                    description: '',\n                    duration: 1\n                })\n                setTimeout(() => {\n                    window.location.reload()\n                }, 1000)\n            } else {\n                await getData()\n                await getUsers()\n            }\n        }\n        fetchData()\n    }, [])\n\n    const getData = async () => {\n        await fly\n            .get('/tasks/all/')\n            .then(res => {\n                setDataSource(res.data.tasks)\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const getUsers = async () => {\n        await fly\n            .get('/users/all')\n            .then(res => {\n                for (let key in res.data.users) {\n                    res.data.users[key] = { ...res.data.users[key] }\n                }\n                setUsers(res.data.users)\n                let fil = []\n                for (let key in res.data.users) {\n                    fil.push({ text: res.data.users[key][1], value: res.data.users[key][1] })\n                }\n                setFilters(fil)\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleSearch = async (selectedKeys, confirm) => {\n        await confirm()\n        await setSearchText(selectedKeys[0])\n    }\n\n    const handleReset = async clearFilters => {\n        await clearFilters()\n        await setSearchText('')\n    }\n\n    const handleDelete = async row => {\n        await fly\n            .post('/tasks/delete/' + row.id + '/')\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '删除成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '删除失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleExpand = async (expanded, record) => {\n        await fly\n            .get('/tasks/progresses/' + record.id + '/')\n            .then(res => {\n                setPregress(res.data.progress);\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleClick = async () => {\n        await fly\n            .get('/users/logout/')\n            .then(() => {\n                Cookies.remove('name', { path: '/', domain: document.domain })\n                window.location.reload()\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <ErrorBoundary>\n            <Table\n                dataSource={dataSource}\n                rowKey=\"id\"\n                pagination={{ simple: true, total: dataSource.length, size: 'small', pageSize: 20 }}\n                expandedRowRender={() =>\n                    <ErrorBoundary>\n                        <Timeline>\n                            {\n                                progress.map(item => {\n                                    return <Timeline.Item key={item.last_update}>{item.progress}--->{item.submitter}{moment(item.last_update).format('YYYY-MM-DD HH:mm:ss')}</Timeline.Item>\n                                })\n                            }\n                        </Timeline>\n                    </ErrorBoundary>}\n                title={() => <Fragment>\n                    <MyContext.Provider value={{ users: users }}>\n                        <ErrorBoundary>\n                            <Add />\n                        </ErrorBoundary>\n                    </MyContext.Provider>\n                    <Tooltip placement=\"bottom\" title=\"登出\" arrowPointAtCenter>\n                        <div style={{ float: 'right', marginRight: 15, marginBottom: 15 }}><Button type=\"danger\" icon={<LogoutOutlined />} onClick={handleClick} /></div>\n                    </Tooltip>\n                </Fragment>}\n                onExpand={handleExpand}\n                scroll={{ scrollToFirstRowOnChange: true }}\n            >\n                <Table.Column title=\"项目名称\" dataIndex=\"name\" key=\"name\" width='13%' filterDropdown={({\n                    setSelectedKeys,\n                    selectedKeys,\n                    confirm,\n                    clearFilters\n                }) => (\n                        <div style={{ padding: 8 }}>\n                            <ErrorBoundary>\n                                <Input\n                                    ref={node => { setSearchInput(node) }}\n                                    placeholder=\"项目搜索\"\n                                    value={selectedKeys[0]}\n                                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                    onPressEnter={() => handleSearch(selectedKeys, confirm)}\n                                    style={{ width: 188, marginBottom: 8, display: \"block\" }}\n                                />\n                            </ErrorBoundary>\n                            <Button type=\"primary\" onClick={() => handleSearch(selectedKeys, confirm)} size=\"small\" style={{ width: 90, marginRight: 8 }}>搜索</Button>\n                            <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>重置</Button>\n                        </div>\n                    )}\n                    filterIcon={() => <SearchOutlined />}\n                    onFilter={(value, record) =>\n                        record.name\n                            .toString()\n                            .toLowerCase()\n                            .includes(value.toLowerCase())\n                    } />\n                <Table.Column title=\"项目负责人\" dataIndex=\"manager\" key=\"manager\" width='10%' filters={filters} onFilter={(value, record) => record.manager.includes(value)} />\n            )} />\n            <Table.Column title=\"项目参与人\" dataIndex=\"members\" key=\"members\" width='14%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={20}>\n                                {\n                                    record.members.map(item => {\n                                        return <Col span={8} key={item} style={{ marginTop: 3, marginBottom: 3 }}><Tag>{item}</Tag></Col>\n                                    })\n                                }\n                            </Col>\n                            <Col span={2}>\n                                <MyContext.Provider value={{ id: record.id, members: record.members, users: users }}>\n                                    <ErrorBoundary>\n                                        <Members />\n                                    </ErrorBoundary>\n                                </MyContext.Provider>\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度\" dataIndex=\"progress\" key=\"progress\" render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={22}>\n                                <Typography.Paragraph ellipsis={{ rows: 1, expandable: true }} >\n                                    {record.progress}\n                                </Typography.Paragraph>\n                            </Col>\n                            <Col span={2}>\n                                <MyContext.Provider value={{ id: record.id }}>\n                                    <ErrorBoundary>\n                                        <Progress />\n                                    </ErrorBoundary>\n                                </MyContext.Provider>\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度修改人/修改时间\" dataIndex=\"submitter\" key=\"submitter\" width='15%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col>\n                                {record.submitter}\n                            </Col>\n                            <Col>\n                                {moment(record.last_update).format('YYYY-MM-DD HH:mm:ss')}\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"操作\" dataIndex=\"option\" key=\"option\" width='9%' render={(text, record) => {\n                    return dataSource.length >= 1 ? (\n                        <Fragment>\n                            <MyContext.Provider value={{ users: users, id: record.id }}>\n                                <ErrorBoundary>\n                                    <Edit />\n                                </ErrorBoundary>\n                            </MyContext.Provider>\n                            <Divider type=\"vertical\" />\n                            <Popconfirm title=\"确认删除\" cancelText='取消' okText='确定' onConfirm={() => handleDelete(record)}>\n                                <Tooltip placement=\"bottom\" title=\"删除项目\" arrowPointAtCenter>\n                                    <Button type=\"danger\" icon={<DeleteOutlined />} />\n                                </Tooltip>\n                            </Popconfirm>\n                        </Fragment>\n                    ) : null\n                }} />\n            </Table>\n        </ErrorBoundary>\n        <BackTop />\n    </Fragment>\n}\n\nexport default TableData","import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Input, Button, notification, Modal } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Password() {\n    const [visible, setVisible] = useState(false)\n\n    const onFinish = async values => {\n        await fly\n            .post('/users/password/', qs.stringify({\n                username: values.username,\n                password: values.password,\n                new: values.new\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <a onClick={() => setVisible(true)} type=\"primary\">修改密码</a>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                            <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>修改密码</p>\n                        </div>\n                        <Form.Item name='username' rules={[{\n                            required: true, message: '用户名不能为空'\n                        }]}>\n                            <Input placeholder=\"用户名\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='password' rules={[{\n                            required: true, message: '原密码不能为空'\n                        }]}>\n                            <Input.Password autoComplete=\"true\" placeholder=\"原密码\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='new' rules={[{\n                            required: true, message: '新密码不能为空'\n                        }]}>\n                            <Input.Password autoComplete=\"true\" placeholder=\"新密码\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">提 交</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Password","import React, { useEffect } from 'react'\nimport { Row, Col, Card, Form, Input, Button, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport Cookies from 'js-cookie'\nimport Password from './Password'\n\nfunction Login() {\n    const onFinish = async values => {\n        await fly\n            .post('/users/login/', qs.stringify({\n                username: values.username,\n                password: values.password\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    Cookies.set('name', 'adinno', { expires: new Date(res.data.expiry), domain: document.domain })\n                    window.location.reload()\n                } else if (res.data.status === 2) {\n                    notification.error({\n                        message: '已登录',\n                        description: '',\n                        duration: 2\n                    })\n                } else {\n                    notification.error({\n                        message: unescape(res.data.reason.replace(/\\\\u/g, '%u')),\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    useEffect(() => {\n        if (Cookies.get('name') != undefined) {\n            window.location.reload()\n        }\n    }, [])\n\n    return <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, margin: 'auto' }}>\n        <Col xs={24} sm={24} md={24} lg={8} xl={8} xxl={8}>\n            <Card bodyStyle={{ padding: 0 }} style={{ boxShadow: '0 0 10px #888888' }} bordered={false}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={22} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onFinish={onFinish}>\n                            <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                                <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>登 录</p>\n                            </div>\n                            <Form.Item name='username' rules={[{\n                                required: true, message: '用户名不能为空'\n                            }]}>\n                                <Input allowClear placeholder=\"用户名\" />\n                            </Form.Item>\n                            <Form.Item name='password' rules={[{\n                                required: true, whitespace: true, message: '密码不能为空'\n                            }]}>\n                                <Input.Password allowClear autoComplete=\"true\" placeholder=\"密码\" />\n                            </Form.Item>\n                            <Form.Item>\n                                <Password />\n                                <Button type=\"primary\" block htmlType=\"submit\">登 录</Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </Card>\n        </Col>\n    </Row >\n}\n\nexport default Login","import React from 'react'\nimport TableData from '../components/TableData'\nimport Login from '../components/Login'\nimport Cookies from 'js-cookie'\n\nfunction index() {\n    let cook\n\n    if (Cookies.get('name') === undefined) {\n        cook = false\n    } else {\n        cook = true\n    }\n\n    return cook ? (<TableData />) : (<Login />)\n}\n\nexport default index","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ConfigProvider } from 'antd'\nimport zhCN from 'antd/es/locale/zh_CN'\nimport index from '../views/index'\n\nconst Routers = () => (\n    <ConfigProvider locale={zhCN}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={index} />\n            </Switch>\n        </Router>\n    </ConfigProvider>\n);\n\nexport default Routers","import React from 'react'\nimport { render } from 'react-dom'\nimport Routers from './router/index'\n\nrender(<Routers />, document.getElementById('root'))"],"sourceRoot":""}