{"version":3,"sources":["components/Add.jsx","components/Edit.jsx","components/Progress.jsx","components/Members.jsx","context-manager.js","components/ErrorBoundary.jsx","components/TableData.jsx","components/Password.jsx","components/Login.jsx","views/index.jsx","components/NotFound.jsx","router/index.js","serviceWorker.js","index.js"],"names":["Add","props","useState","visible","setVisble","onFinish","values","a","fly","post","qs","stringify","name","manager","members","progress","then","res","data","status","notification","success","message","description","duration","setTimeout","window","location","reload","error","reason","catch","err","placement","title","arrowPointAtCenter","style","float","marginLeft","marginBottom","disabled","onClick","type","icon","PlusOutlined","footer","onCancel","justify","align","xs","sm","md","lg","xl","xxl","Item","rules","required","placeholder","allowClear","users","map","item","Option","key","mode","TextArea","autoSize","block","htmlType","Edit","setVisible","id","EditOutlined","Progress","PlusCircleOutlined","Members","inANotInB","inBNotInA","b","obj","Object","i","len","length","hasOwnProperty","undefined","arr","Array","per","del","add","value","MyContext","React","createContext","ErrorBoundary","state","errorInfo","this","setState","whiteSpace","toString","componentStack","children","Component","TableData","dataSource","setDataSource","setUsers","setPregress","filters","setFilters","setSearchText","setSearchInput","useEffect","Cookies","get","getData","getUsers","fetchData","tasks","fil","push","text","handleSearch","selectedKeys","confirm","handleDelete","row","handleExpand","expanded","record","handleClick","remove","path","domain","document","rowKey","pagination","simple","total","size","pageSize","expandedRowRender","last_update","submitter","moment","format","Provider","marginRight","LogoutOutlined","onExpand","scroll","scrollToFirstRowOnChange","Column","dataIndex","width","filterDropdown","setSelectedKeys","clearFilters","padding","Search","ref","node","onChange","e","target","onPressEnter","display","SearchOutlined","handleReset","filterIcon","filtered","color","onFilter","toLowerCase","includes","render","span","marginTop","Paragraph","ellipsis","rows","expandable","cancelText","okText","onConfirm","DeleteOutlined","Password","username","password","new","margin","textAlign","fontSize","fontWeight","autoComplete","Login","set","expires","Date","expiry","unescape","replace","position","top","left","right","bottom","bodyStyle","boxShadow","bordered","whitespace","index","NotFound","subTitle","extra","href","Routers","locale","zhCN","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b941d53.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Add(props = {}) {\n    const [visible, setVisble] = useState(false)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/add/', qs.stringify({\n                name: values.name,\n                manager: values.manager,\n                members: values.members,\n                progress: values.progress\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '添加成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '添加失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"添加项目\" arrowPointAtCenter>\n            <div style={{ float: \"left\", marginLeft: 15, marginBottom: 15 }}><Button disabled={visible} onClick={() => setVisble(true)} type=\"primary\" icon={<PlusOutlined />} /></div>\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisble(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='name' rules={[{\n                            required: true, message: '项目名称不能为空'\n                        }]}>\n                            <Input placeholder=\"项目名称\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='manager' rules={[{\n                            required: true, message: '项目负责人不能为空'\n                        }]}>\n                            <Select placeholder=\"项目负责人\" allowClear>\n                                {\n                                    props.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name='members' rules={[{\n                            required: true, message: '项目参与人不能为空'\n                        }]}>\n                            <Select mode=\"multiple\" placeholder=\"项目参与人\" allowClear>\n                                {\n                                    props.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name='progress' rules={[{\n                            required: true, message: '项目进度不能为空'\n                        }]}>\n                            <Input.TextArea autoSize placeholder=\"项目进度\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">保 存</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Add","import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport { EditOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Edit(props = {}) {\n    const [visible, setVisible] = useState(false)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/update/' + props.id + '/', qs.stringify({\n                name: values.name,\n                manager: values.manager\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"修改项目\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<EditOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='name'>\n                            <Input placeholder=\"项目名称\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='manager'>\n                            <Select placeholder=\"项目负责人\" allowClear>\n                                {\n                                    props.users.map(item => {\n                                        return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Edit","import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Tooltip, notification } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Progress(props = {}) {\n    const [visible, setVisible] = useState(false)\n\n    const onFinish = async values => {\n        await fly\n            .post('/tasks/progress/' + props.id + '/', qs.stringify({\n                progress: values.progress\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '更新成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '更新失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"更新进度\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<PlusCircleOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='progress' rules={[{\n                            required: true, message: '项目进度不能为空'\n                        }]}>\n                            <Input.TextArea autoSize placeholder=\"项目进度\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Progress","import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Modal, Button, Tooltip, notification, Select } from 'antd'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Members(props = {}) {\n    const [visible, setVisible] = useState(false)\n\n    const onFinish = async values => {\n        const a = props.members\n        const b = values.members\n\n        //a与b不重复的部分\n        function inANotInB(a, b) {\n            const obj = new Object()\n            for (let i = 0, len = a.length; i < len; i++) {\n                obj[a[i]] = 1\n            }\n            for (let i = 0, len = b.length; i < len; i++) {\n                if (obj.hasOwnProperty(b[i])) {\n                    obj[b[i]] = undefined\n                }\n            }\n            const arr = new Array()\n            let i = 0\n            for (let per in obj) {\n                if (obj[per]) {\n                    arr[i++] = per\n                }\n            }\n            return arr\n        }\n\n        //b与a不重复的部分\n        function inBNotInA(a, b) {\n            const obj = new Object()\n            for (let i = 0, len = b.length; i < len; i++) {\n                obj[b[i]] = 1\n            }\n            for (let i = 0, len = a.length; i < len; i++) {\n                if (obj.hasOwnProperty(a[i])) {\n                    obj[a[i]] = undefined\n                }\n            }\n            const arr = new Array()\n            let i = 0\n            for (let per in obj) {\n                if (obj[per]) {\n                    arr[i++] = per\n                }\n            }\n            return arr\n        }\n\n        var del = inANotInB(a, b)\n        var add = inBNotInA(a, b)\n\n        await fly\n            .post('/tasks/members/' + props.id + '/', qs.stringify({\n                add: add,\n                del: del\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n\n    return <Fragment>\n        <Tooltip placement=\"bottom\" title=\"修改参与人\" arrowPointAtCenter>\n            <Button disabled={visible} onClick={() => setVisible(true)} type=\"primary\" icon={<PlusCircleOutlined />} />\n        </Tooltip>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <Form.Item name='members'>\n                            <Select allowClear mode=\"multiple\" placeholder=\"项目参与人\" value={props.members}>\n                                {\n                                    props.users.map(item => {\n                                        return <Select.Option key={item[1]}>{item[1]}</Select.Option>\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">修 改</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Members","import React from 'react'\n\nexport const MyContext = React.createContext(null)","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        })\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.errorInfo) {\n            // Error path\n            return <div>\n                <h2>Something went wrong</h2>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                    {this.state.error && this.state.error.toString()}\n                    <br />\n                    {this.state.errorInfo.componentStack}\n                </details>\n            </div>\n        }\n        // Normally, just render children\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","import React, { Fragment, useState, useEffect } from 'react'\nimport { Button, Table, notification, Popconfirm, BackTop, Tooltip, Divider, Row, Col, Tag, Timeline, Input, Typography } from 'antd'\nimport { LogoutOutlined, SearchOutlined, DeleteOutlined } from '@ant-design/icons'\nimport fly from 'flyio'\nimport Add from './Add'\nimport Edit from './Edit'\nimport Progress from './Progress'\nimport Members from './Members'\nimport moment from 'moment'\nimport Cookies from 'js-cookie'\nimport { MyContext } from '../context-manager'\nimport ErrorBoundary from './ErrorBoundary'\n\nfunction TableData() {\n    const [dataSource, setDataSource] = useState([])\n    const [users, setUsers] = useState([])\n    const [progress, setPregress] = useState([])\n    const [filters, setFilters] = useState([])\n    const [searchText, setSearchText] = useState('')\n    const [searchInput, setSearchInput] = useState('')\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (Cookies.get('name') === undefined) {\n                notification.error({\n                    message: 'Cookie过期，重新登录',\n                    description: '',\n                    duration: 1\n                })\n                setTimeout(() => {\n                    window.location.reload()\n                }, 1000)\n            } else {\n                await getData()\n                await getUsers()\n            }\n        }\n        fetchData()\n    }, [])\n\n    const getData = async () => {\n        await fly\n            .get('/tasks/all/')\n            .then(res => {\n                setDataSource(res.data.tasks)\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const getUsers = async () => {\n        await fly\n            .get('/users/all')\n            .then(res => {\n                for (let key in res.data.users) {\n                    res.data.users[key] = { ...res.data.users[key] }\n                }\n                setUsers(res.data.users)\n                let fil = []\n                for (let key in res.data.users) {\n                    fil.push({ text: res.data.users[key][1], value: res.data.users[key][1] })\n                }\n                setFilters(fil)\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleSearch = (selectedKeys, confirm) => {\n        confirm()\n        setSearchText(selectedKeys[0])\n    }\n\n    const handleReset = clearFilters => {\n        clearFilters()\n        setSearchText('')\n    }\n\n    const handleDelete = async row => {\n        await fly\n            .post('/tasks/delete/' + row.id + '/')\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '删除成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '删除失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleExpand = async (expanded, record) => {\n        await fly\n            .get('/tasks/progresses/' + record.id + '/')\n            .then(res => {\n                setPregress(res.data.progress);\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    const handleClick = async () => {\n        await fly\n            .get('/users/logout/')\n            .then(() => {\n                Cookies.remove('name', { path: '/', domain: document.domain })\n                window.location.reload()\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <ErrorBoundary>\n            <Table\n                dataSource={dataSource}\n                rowKey=\"id\"\n                pagination={{ simple: true, total: dataSource.length, size: 'small', pageSize: 20 }}\n                expandedRowRender={() =>\n                    <ErrorBoundary>\n                        <Timeline>\n                            {\n                                progress.map(item => {\n                                    return <Timeline.Item key={item.last_update}>{item.progress}--->{item.submitter}{moment(item.last_update).format('YYYY-MM-DD HH:mm:ss')}</Timeline.Item>\n                                })\n                            }\n                        </Timeline>\n                    </ErrorBoundary>}\n                title={() => <Fragment>\n                    <MyContext.Provider>\n                        <ErrorBoundary>\n                            <Add users={users} dataSource={dataSource} />\n                        </ErrorBoundary>\n                    </MyContext.Provider>\n                    <Tooltip placement=\"bottom\" title=\"登出\" arrowPointAtCenter>\n                        <div style={{ float: 'right', marginRight: 15, marginBottom: 15 }}><Button type=\"danger\" icon={<LogoutOutlined />} onClick={handleClick} /></div>\n                    </Tooltip>\n                </Fragment>}\n                onExpand={handleExpand}\n                scroll={{ scrollToFirstRowOnChange: true }}\n            >\n                <Table.Column title=\"项目名称\" dataIndex=\"name\" key=\"name\" width='13%' filterDropdown={({\n                    setSelectedKeys,\n                    selectedKeys,\n                    confirm,\n                    clearFilters\n                }) => (\n                        <div style={{ padding: 8 }}>\n                            <ErrorBoundary>\n                                <Input.Search\n                                    ref={node => { setSearchInput(node) }}\n                                    placeholder=\"项目搜索\"\n                                    value={selectedKeys[0]}\n                                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                    onPressEnter={() => handleSearch(selectedKeys, confirm)}\n                                    style={{ width: 188, marginBottom: 8, display: \"block\" }}\n                                />\n                            </ErrorBoundary>\n                            <Button type=\"primary\" onClick={() => handleSearch(selectedKeys, confirm)} icon={<SearchOutlined />} size=\"small\" style={{ width: 90, marginRight: 8 }}>搜索</Button>\n                            <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>重置</Button>\n                        </div>\n                    )}\n                    filterIcon={filtered => (\n                        <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n                    )}\n                    onFilter={(value, record) =>\n                        record.name\n                            .toString()\n                            .toLowerCase()\n                            .includes(value.toLowerCase())\n                    } />\n                <Table.Column title=\"项目负责人\" dataIndex=\"manager\" key=\"manager\" width='10%' filters={filters} onFilter={(value, record) => record.manager.includes(value)} />\n            )} />\n            <Table.Column title=\"项目参与人\" dataIndex=\"members\" key=\"members\" width='14%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={20}>\n                                {\n                                    record.members.map(item => {\n                                        return <Col span={8} key={item} style={{ marginTop: 3, marginBottom: 3 }}><Tag>{item}</Tag></Col>\n                                    })\n                                }\n                            </Col>\n                            <Col span={2}>\n                                <MyContext.Provider>\n                                    <ErrorBoundary>\n                                        <Members id={record.id} members={record.members} users={users} />\n                                    </ErrorBoundary>\n                                </MyContext.Provider>\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度\" dataIndex=\"progress\" key=\"progress\" render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={22}>\n                                <Typography.Paragraph ellipsis={{ rows: 1, expandable: true }} >\n                                    {record.progress}\n                                </Typography.Paragraph>\n                            </Col>\n                            <Col span={2}>\n                                <MyContext.Provider>\n                                    <ErrorBoundary>\n                                        <Progress id={record.id} />\n                                    </ErrorBoundary>\n                                </MyContext.Provider>\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度修改人/修改时间\" dataIndex=\"submitter\" key=\"submitter\" width='15%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col>\n                                {record.submitter}\n                            </Col>\n                            <Col>\n                                {moment(record.last_update).format('YYYY-MM-DD HH:mm:ss')}\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"操作\" dataIndex=\"option\" key=\"option\" width='9%' render={(text, record) => {\n                    return dataSource.length >= 1 ? (\n                        <Fragment>\n                            <MyContext.Provider>\n                                <ErrorBoundary>\n                                    <Edit users={users} id={record.id} dataSource={dataSource} />\n                                </ErrorBoundary>\n                            </MyContext.Provider>\n                            <Divider type=\"vertical\" />\n                            <Popconfirm title=\"确认删除\" cancelText='取消' okText='确定' onConfirm={() => handleDelete(record)}>\n                                <Tooltip placement=\"bottom\" title=\"删除项目\" arrowPointAtCenter>\n                                    <Button type=\"danger\" icon={<DeleteOutlined />} />\n                                </Tooltip>\n                            </Popconfirm>\n                        </Fragment>\n                    ) : null\n                }} />\n            </Table>\n        </ErrorBoundary>\n        <BackTop />\n    </Fragment>\n}\n\nexport default TableData","import React, { Fragment, useState } from 'react'\nimport { Row, Col, Form, Input, Button, notification, Modal } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nfunction Password() {\n    const [visible, setVisible] = useState(false)\n\n    const onFinish = async values => {\n        await fly\n            .post('/users/password/', qs.stringify({\n                username: values.username,\n                password: values.password,\n                new: values.new\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    notification.success({\n                        message: '修改成功',\n                        description: '',\n                        duration: 2\n                    })\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 2000)\n                } else {\n                    notification.error({\n                        message: '修改失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            }).catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    return <Fragment>\n        <a onClick={() => setVisible(true)} type=\"primary\">修改密码</a>\n        <Modal visible={visible} footer={null} onCancel={() => setVisible(false)}>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    <Form onFinish={onFinish}>\n                        <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                            <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>修改密码</p>\n                        </div>\n                        <Form.Item name='username' rules={[{\n                            required: true, message: '用户名不能为空'\n                        }]}>\n                            <Input placeholder=\"用户名\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='password' rules={[{\n                            required: true, message: '原密码不能为空'\n                        }]}>\n                            <Input type='password' autoComplete=\"true\" placeholder=\"原密码\" allowClear />\n                        </Form.Item>\n                        <Form.Item name='new' rules={[{\n                            required: true, message: '新密码不能为空'\n                        }]}>\n                            <Input type='password' autoComplete=\"true\" placeholder=\"新密码\" allowClear />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" block htmlType=\"submit\">提 交</Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </Modal>\n    </Fragment>\n}\n\nexport default Password","import React, { useEffect } from 'react'\nimport { Row, Col, Card, Form, Input, Button, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport Cookies from 'js-cookie'\nimport Password from './Password'\n\nfunction Login() {\n    const onFinish = async values => {\n        await fly\n            .post('/users/login/', qs.stringify({\n                username: values.username,\n                password: values.password\n            }))\n            .then(res => {\n                if (res.data.status === 1) {\n                    Cookies.set('name', 'adinno', { expires: new Date(res.data.expiry), domain: document.domain })\n                    window.location.reload()\n                } else if (res.data.status === 2) {\n                    notification.error({\n                        message: '已登录',\n                        description: '',\n                        duration: 2\n                    })\n                } else {\n                    notification.error({\n                        message: unescape(res.data.reason.replace(/\\\\u/g, '%u')),\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            })\n            .catch(err => {\n                notification.error({\n                    message: 'Error',\n                    description: err,\n                    duration: 2\n                })\n            })\n    }\n\n    useEffect(() => {\n        if (Cookies.get('name') != undefined) {\n            window.location.reload()\n        }\n    }, [])\n\n    return <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, margin: 'auto' }}>\n        <Col xs={24} sm={24} md={24} lg={8} xl={8} xxl={8}>\n            <Card bodyStyle={{ padding: 0 }} style={{ boxShadow: '0 0 10px #888888' }} bordered={false}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={22} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onFinish={onFinish}>\n                            <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                                <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>登 录</p>\n                            </div>\n                            <Form.Item name='username' rules={[{\n                                required: true, message: '用户名不能为空'\n                            }]}>\n                                <Input allowClear placeholder=\"用户名\" />\n                            </Form.Item>\n                            <Form.Item name='password' rules={[{\n                                required: true, whitespace: true, message: '密码不能为空'\n                            }]}>\n                                <Input allowClear autoComplete=\"true\" type=\"password\" placeholder=\"密码\" />\n                            </Form.Item>\n                            <Form.Item>\n                                <Password />\n                                <Button type=\"primary\" block htmlType=\"submit\">登 录</Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </Card>\n        </Col>\n    </Row >\n}\n\nexport default Login","import React from 'react'\nimport TableData from '../components/TableData'\nimport Login from '../components/Login'\nimport Cookies from 'js-cookie'\n\nfunction index() {\n    let cook\n\n    if (Cookies.get('name') === undefined) {\n        cook = false\n    } else {\n        cook = true\n    }\n\n    return cook ? (<TableData />) : (<Login />)\n}\n\nexport default index","import React from 'react'\nimport { Result, Button } from 'antd'\n\nfunction NotFound() {\n    return <Result status=\"404\" title=\"404\" subTitle=\"页面不存在\" extra={<Button type=\"primary\" href='/'>返回首页</Button>} />\n}\n\nexport default NotFound","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport index from '../views/index'\nimport zhCN from 'antd/es/locale/zh_CN'\nimport { ConfigProvider } from 'antd'\nimport NotFound from '../components/NotFound'\n\nconst Routers = () => (\n    <ConfigProvider locale={zhCN}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={index} />\n                <Route component={NotFound} />\n            </Switch>\n        </Router>\n    </ConfigProvider>\n);\n\nexport default Routers","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport Routers from './router/index'\nimport * as serviceWorker from './serviceWorker'\n\nrender(\n    <Routers />,\n    document.getElementById('root')\n)\n\n// serviceWorker.unregister()\nserviceWorker.register()"],"sourceRoot":""}