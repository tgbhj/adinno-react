{"version":3,"sources":["webpack:///./src/components/Add.jsx","webpack:///./src/components/Edit.jsx","webpack:///./src/components/Progress.jsx","webpack:///./src/components/Members.jsx","webpack:///./src/components/TableData.jsx","webpack:///./src/components/Password.jsx","webpack:///./src/components/Login.jsx","webpack:///./src/views/index.jsx","webpack:///./src/router/index.js","webpack:///./src/index.js"],"names":["FormItem","es_form","Item","AddForm","state","visible","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","fly","post","qs","stringify","name","getFieldValue","manager","members","progress","then","res","data","status","window","location","reload","notification","error","message","description","reason","duration","catch","console","log","fieldsError","_this2","this","react_default","a","createElement","react","tooltip","placement","title","arrowPointAtCenter","style","float","marginLeft","es_button","disabled","onClick","setState","type","icon","modal","footer","onCancel","es_row","justify","align","col","xs","sm","md","lg","xl","xxl","onSubmit","getFieldDecorator","rules","required","input","placeholder","allowClear","es_select","users","map","item","Option","key","mode","TextArea","autosize","block","htmlType","getFieldsError","Object","keys","some","field","React","Component","Add","create","EditForm","id","Edit_FormItem","Edit","ProgressForm","Progress_FormItem","Progress","MembersForm","b","del","obj","i","len","length","hasOwnProperty","undefined","arr","Array","per","inANotInB","add","inBNotInA","Members_FormItem","initialValue","Members","TableData","dataSource","filters","searchText","handleSearch","selectedKeys","confirm","handleReset","clearFilters","handleDelete","row","handleExpand","expanded","record","get","handleClick","Cookies","remove","path","domain","document","tasks","objectSpread","_this3","getData","getUsers","push","text","value","_this4","table","rowKey","pagination","simple","total","size","pageSize","expandedRowRender","timeline","last_update","submitter","moment","format","components_Add","marginRight","onExpand","Column","dataIndex","width","filterDropdown","_ref","setSelectedKeys","padding","ref","node","searchInput","onChange","target","onPressEnter","marginBottom","display","filterIcon","filtered","color","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","span","marginTop","tag","components_Members","wordBreak","overflowWrap","components_Progress","components_Edit","divider","popconfirm","cancelText","okText","onConfirm","back_top","PassForm","handleEdit","username","password","new","margin","textAlign","fontSize","fontWeight","Password_FormItem","autoComplete","Password","SignForm","set","expires","Date","expiry","unescape","replace","position","top","left","right","bottom","card","bodyStyle","boxShadow","bordered","Login_FormItem","prefix","whitespace","components_Password","Login","index","components_TableData","components_Login","Routers","config_provider","locale","zhCN","react_router_dom","react_router","exact","component","router","getElementById"],"mappings":"4jBAKMA,EAAWC,EAAA,EAAKC,K,IAMhBC,E,2MACFC,MAAQ,CACJC,SAAS,G,EAGbC,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GACrCD,GACDE,IACKC,KAAK,cAAeC,IAAGC,UAAU,CAC9BC,KAAMV,EAAKC,MAAMC,KAAKS,cAAc,QACpCC,QAASZ,EAAKC,MAAMC,KAAKS,cAAc,WACvCE,QAASb,EAAKC,MAAMC,KAAKS,cAAc,WACvCG,SAAUd,EAAKC,MAAMC,KAAKS,cAAc,eAE3CI,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAGnBC,MAAM,SAAAxB,GACLyB,QAAQC,IAAI1B,Q,wEAMtB,IArCK2B,EAqCNC,EAAAC,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,2BAAOC,oBAAkB,GACvDP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,OAAQC,WAAY,KAAKV,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,SAAUb,KAAKtC,MAAMC,QAASmD,QAAS,kBAAMf,EAAKgB,SAAS,CAAEpD,SAAS,KAASqD,KAAK,UAAUC,KAAK,WAE5JhB,EAAAC,EAAAC,cAAAe,EAAA,GAAOvD,QAASqC,KAAKtC,MAAMC,QAASwD,OAAQ,KAAMC,SAAU,kBAAMrB,EAAKgB,SAAS,CAAEpD,SAAS,MACvFsC,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAKpC,cACjBqC,EAAAC,EAAAC,cAAC7C,EAAD,KACK0C,KAAKhC,MAAMC,KAAK+D,kBAAkB,OAAQ,CACvCC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,sDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOC,YAAY,2BAAOC,YAAU,MAG5CpC,EAAAC,EAAAC,cAAC7C,EAAD,KACK0C,KAAKhC,MAAMC,KAAK+D,kBAAkB,UAAW,CAC1CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,4DAFhCS,CAKGC,EAAAC,EAAAC,cAAAmC,EAAA,GAAQF,YAAY,iCAAQC,YAAU,GAE9BrC,KAAKhC,MAAMuE,MAAMC,IAAI,SAAAC,GACjB,OAAOxC,EAAAC,EAAAC,cAAAmC,EAAA,EAAQI,OAAR,CAAeC,IAAKF,EAAK,IAAKA,EAAK,SAM9DxC,EAAAC,EAAAC,cAAC7C,EAAD,KACK0C,KAAKhC,MAAMC,KAAK+D,kBAAkB,UAAW,CAC1CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,4DAFhCS,CAKGC,EAAAC,EAAAC,cAAAmC,EAAA,GAAQM,KAAK,WAAWR,YAAY,iCAAQC,YAAU,GAE9CrC,KAAKhC,MAAMuE,MAAMC,IAAI,SAAAC,GACjB,OAAOxC,EAAAC,EAAAC,cAAAmC,EAAA,EAAQI,OAAR,CAAeC,IAAKF,EAAK,IAAKA,EAAK,SAM9DxC,EAAAC,EAAAC,cAAC7C,EAAD,KACK0C,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,sDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,EAAOU,SAAP,CAAgBC,UAAQ,EAACV,YAAY,+BAG7CnC,EAAAC,EAAAC,cAAC7C,EAAD,KACI2C,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAClCnC,UAhGjBf,EAgGqCE,KAAKhC,MAAMC,KAAKgF,iBA/F7DC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OA8F9B,2B,GA3FVC,IAAMC,WAwGbC,EAFHjG,EAAA,EAAKkG,QAALlG,CAAcE,GC5GpBH,EAAWC,EAAA,EAAKC,K,IAMhBkG,E,2MACFhG,MAAQ,CACJC,SAAS,G,EAGbC,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GACrCD,GACDE,IACKC,KAAK,iBAAkBP,EAAKC,MAAM2F,GAAI,IAAKpF,IAAGC,UAAU,CACrDC,KAAMV,EAAKC,MAAMC,KAAKS,cAAc,QACpCC,QAASZ,EAAKC,MAAMC,KAAKS,cAAc,cAE1CI,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAGnBC,MAAM,SAAAxB,GACLyB,QAAQC,IAAI1B,Q,wEAMtB,IAnCK2B,EAmCNC,EAAAC,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,2BAAOC,oBAAkB,GACvDP,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,SAAUb,KAAKtC,MAAMC,QAASmD,QAAS,kBAAMf,EAAKgB,SAAS,CAAEpD,SAAS,KAASqD,KAAK,UAAUC,KAAK,UAE/GhB,EAAAC,EAAAC,cAAAe,EAAA,GAAOvD,QAASqC,KAAKtC,MAAMC,QAASwD,OAAQ,KAAMC,SAAU,kBAAMrB,EAAKgB,SAAS,CAAEpD,SAAS,MACvFsC,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAKpC,cACjBqC,EAAAC,EAAAC,cAACyD,EAAD,KACK5D,KAAKhC,MAAMC,KAAK+D,kBAAkB,OAAlChC,CACGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOC,YAAY,2BAAOC,YAAU,MAG5CpC,EAAAC,EAAAC,cAACyD,EAAD,KACK5D,KAAKhC,MAAMC,KAAK+D,kBAAkB,UAAlChC,CACGC,EAAAC,EAAAC,cAAAmC,EAAA,GAAQF,YAAY,iCAAQC,YAAU,GAE9BrC,KAAKhC,MAAMuE,MAAMC,IAAI,SAAAC,GACjB,OAAOxC,EAAAC,EAAAC,cAAAmC,EAAA,EAAQI,OAAR,CAAeC,IAAKF,EAAK,IAAKA,EAAK,SAM9DxC,EAAAC,EAAAC,cAACyD,EAAD,KACI3D,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAClCnC,UA9DjBf,EA8DqCE,KAAKhC,MAAMC,KAAKgF,iBA7D7DC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OA4D9B,2B,GAzDTC,IAAMC,WAsEdM,EAFFtG,EAAA,EAAKkG,QAALlG,CAAcmG,GC1ErBpG,EAAWC,EAAA,EAAKC,K,IAMhBsG,E,2MACFpG,MAAQ,CACJC,SAAS,G,EAGbC,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GACrCD,GACDE,IACKC,KAAK,mBAAoBP,EAAKC,MAAM2F,GAAI,IAAKpF,IAAGC,UAAU,CACvDK,SAAUd,EAAKC,MAAMC,KAAKS,cAAc,eAE3CI,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,uCACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAGnBC,MAAM,SAAAxB,GACLyB,QAAQC,IAAI1B,Q,wEAMtB,IAlCK2B,EAkCNC,EAAAC,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,2BAAOC,oBAAkB,GACvDP,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,SAAUb,KAAKtC,MAAMC,QAASmD,QAAS,kBAAMf,EAAKgB,SAAS,CAAEpD,SAAS,KAASqD,KAAK,UAAUC,KAAK,iBAE/GhB,EAAAC,EAAAC,cAAAe,EAAA,GAAOvD,QAASqC,KAAKtC,MAAMC,QAASwD,OAAQ,KAAMC,SAAU,kBAAMrB,EAAKgB,SAAS,CAAEpD,SAAS,MACvFsC,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAKpC,cACjBqC,EAAAC,EAAAC,cAAC4D,EAAD,KACK/D,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,sDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,EAAOU,SAAP,CAAgBC,UAAQ,EAACV,YAAY,+BAG7CnC,EAAAC,EAAAC,cAAC4D,EAAD,KACI9D,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAClCnC,UAtDjBf,EAsDqCE,KAAKhC,MAAMC,KAAKgF,iBArD7DC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OAoD9B,2B,GAjDLC,IAAMC,WA8DlBS,EAFEzG,EAAA,EAAKkG,QAALlG,CAAcuG,GClEzBxG,EAAWC,EAAA,EAAKC,K,IAMhByG,E,2MACFvG,MAAQ,CACJC,SAAS,G,EAGbC,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GAC1C,IAAKD,EAAK,KACA+B,EAAInC,EAAKC,MAAMY,QACfsF,EAAInG,EAAKC,MAAMC,KAAKS,cAAc,WA4CpCyF,EAzCJ,SAAmBjE,EAAGgE,GAElB,IADA,IAAME,EAAM,IAAIlB,OACPmB,EAAI,EAAGC,EAAMpE,EAAEqE,OAAQF,EAAIC,EAAKD,IACrCD,EAAIlE,EAAEmE,IAAM,EAEhB,IAAK,IAAIA,EAAI,EAAGC,EAAMJ,EAAEK,OAAQF,EAAIC,EAAKD,IACjCD,EAAII,eAAeN,EAAEG,MACrBD,EAAIF,EAAEG,SAAMI,GAGpB,IAAMC,EAAM,IAAIC,MACZN,EAAI,EACR,IAAK,IAAIO,KAAOR,EACRA,EAAIQ,KACJF,EAAIL,KAAOO,GAGnB,OAAOF,EAwBDG,CAAU3E,EAAGgE,GACnBY,EArBJ,SAAmB5E,EAAGgE,GAElB,IADA,IAAME,EAAM,IAAIlB,OACPmB,EAAI,EAAGC,EAAMJ,EAAEK,OAAQF,EAAIC,EAAKD,IACrCD,EAAIF,EAAEG,IAAM,EAEhB,IAAK,IAAIA,EAAI,EAAGC,EAAMpE,EAAEqE,OAAQF,EAAIC,EAAKD,IACjCD,EAAII,eAAetE,EAAEmE,MACrBD,EAAIlE,EAAEmE,SAAMI,GAGpB,IAAMC,EAAM,IAAIC,MACZN,EAAI,EACR,IAAK,IAAIO,KAAOR,EACRA,EAAIQ,KACJF,EAAIL,KAAOO,GAGnB,OAAOF,EAIDK,CAAU7E,EAAGgE,GAEvB7F,IACKC,KAAK,kBAAoBP,EAAKC,MAAM2F,GAAK,IAAKpF,IAAGC,UAAU,CACxDsG,IAAKA,EACLX,IAAKA,KAERrF,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,uCACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAGnBC,MAAM,SAAAxB,GACLyB,QAAQC,IAAI1B,S,wEAMtB,IAnFK2B,EAmFNC,EAAAC,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,iCAAQC,oBAAkB,GACxDP,EAAAC,EAAAC,cAAAS,EAAA,GAAQC,SAAUb,KAAKtC,MAAMC,QAASmD,QAAS,kBAAMf,EAAKgB,SAAS,CAAEpD,SAAS,KAASqD,KAAK,UAAUC,KAAK,iBAE/GhB,EAAAC,EAAAC,cAAAe,EAAA,GAAOvD,QAASqC,KAAKtC,MAAMC,QAASwD,OAAQ,KAAMC,SAAU,kBAAMrB,EAAKgB,SAAS,CAAEpD,SAAS,MACvFsC,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAKpC,cACjBqC,EAAAC,EAAAC,cAAC6E,EAAD,KACKhF,KAAKhC,MAAMC,KAAK+D,kBAAkB,UAAW,CAC1CiD,aAAcjF,KAAKhC,MAAMY,SAD5BoB,CAGGC,EAAAC,EAAAC,cAAAmC,EAAA,GAAQD,YAAU,EAACO,KAAK,WAAWR,YAAY,kCAEvCpC,KAAKhC,MAAMuE,MAAMC,IAAI,SAAAC,GACjB,OAAOxC,EAAAC,EAAAC,cAAAmC,EAAA,EAAQI,OAAR,CAAeC,IAAKF,EAAK,IAAKA,EAAK,SAM9DxC,EAAAC,EAAAC,cAAC6E,EAAD,KACI/E,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAClCnC,UA3GjBf,EA2GqCE,KAAKhC,MAAMC,KAAKgF,iBA1G7DC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OAyG9B,2B,GAtGNC,IAAMC,WAmHjB2B,EAFC3H,EAAA,EAAKkG,QAALlG,CAAc0G,G,kCC0GfkB,G,2MA3NXzH,MAAQ,CACJ0H,WAAY,GACZ7C,MAAO,GACP1D,SAAU,GACVwG,QAAS,GACTC,WAAY,I,EA0ChBC,aAAe,SAACC,EAAcC,GAC1BA,IACA1H,EAAKgD,SAAS,CAAEuE,WAAYE,EAAa,M,EAG7CE,YAAc,SAAAC,GACVA,IACA5H,EAAKgD,SAAS,CAAEuE,WAAY,M,EAGhCM,aAAe,SAAAC,GACXxH,IACKC,KAAK,iBAAmBuH,EAAIlC,GAAK,KACjC7E,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAIrBC,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,M,EAIxB2H,aAAe,SAACC,EAAUC,GACtB3H,IACK4H,IAAI,qBAAuBD,EAAOrC,GAAK,KACvC7E,KAAK,SAAAC,GACFhB,EAAKgD,SAAS,CAAElC,SAAUE,EAAIC,KAAKH,aAEtCc,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,M,EAIxB+H,YAAc,WACV7H,IACK4H,IAAI,kBACJnH,KAAK,WACFqH,IAAQC,OAAO,OAAQ,CAAEC,KAAM,IAAKC,OAAQC,SAASD,SACrDpH,OAAOC,SAASC,WAEnBO,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,M,4MAtFdE,IACD4H,IAAI,eACJnH,KAAK,SAAAC,GACFgB,EAAKgB,SAAS,CAAEqE,WAAYrG,EAAIC,KAAKwH,UAExC7G,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,K,mQAKdE,IACD4H,IAAI,cACJnH,KAAK,SAAAC,GACF,IAAK,IAAI4D,KAAO5D,EAAIC,KAAKuD,MACrBxD,EAAIC,KAAKuD,MAAMI,GAAfO,OAAAuD,EAAA,EAAAvD,CAAA,GAA2BnE,EAAIC,KAAKuD,MAAMI,IAE9C+D,EAAK3F,SAAS,CAAEwB,MAAOxD,EAAIC,KAAKuD,UAEnC5C,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,K,iQAKQsG,IAAxB0B,IAAQF,IAAI,Q,gBACZ/G,OAAOC,SAASC,S,uCAEVY,KAAK2G,U,uBACL3G,KAAK4G,W,OAEX,IAASjE,KADL0C,EAAU,GACErF,KAAKtC,MAAM6E,MACvB8C,EAAQwB,KAAK,CAAEC,KAAM9G,KAAKtC,MAAM6E,MAAMI,GAAK,GAAIoE,MAAO/G,KAAKtC,MAAM6E,MAAMI,GAAK,KAEhF3C,KAAKe,SAAS,CAAEsE,QAASA,I,oIAwDvB,IAAD2B,EAAAhH,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAA8G,EAAA,GACI7B,WAAYpF,KAAKtC,MAAM0H,WACvB8B,OAAO,KACPC,WAAY,CAAEC,QAAQ,EAAMC,MAAOrH,KAAKtC,MAAM0H,WAAWb,OAAQ+C,KAAM,QAASC,SAAU,IAC1FC,kBAAmB,kBACfvH,EAAAC,EAAAC,cAAAsH,EAAA,OAEQT,EAAKtJ,MAAMmB,SAAS2D,IAAI,SAAAC,GACpB,OAAOxC,EAAAC,EAAAC,cAAAsH,EAAA,EAAUjK,KAAV,CAAemF,IAAKF,EAAKiF,aAAcjF,EAAK5D,SAA5C,UAA0D4D,EAAKkF,UAAWC,IAAOnF,EAAKiF,aAAaG,OAAO,4BAIjItH,MAAO,kBAAMN,EAAAC,EAAAC,cAAAkB,EAAA,OACTpB,EAAAC,EAAAC,cAAC2H,EAAD,CAAKvF,MAAOyE,EAAKtJ,MAAM6E,MAAO6C,WAAY4B,EAAKtJ,MAAM0H,aACrDnF,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,eAAKC,oBAAkB,GACrDP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEC,MAAO,QAASqH,YAAa,KAAM9H,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,SAASC,KAAK,SAASH,QAASkG,EAAKd,kBAG3G8B,SAAUhI,KAAK8F,cAGf7F,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,2BAAO2H,UAAU,OAAOvF,IAAI,OAAOwF,MAAM,MAAMC,eAAgB,SAAAC,GAAA,IAC/EC,EAD+ED,EAC/EC,gBACA9C,EAF+E6C,EAE/E7C,aACAC,EAH+E4C,EAG/E5C,QACAE,EAJ+E0C,EAI/E1C,aAJ+E,OAM3E1F,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAE8H,QAAS,IACnBtI,EAAAC,EAAAC,cAAAgC,EAAA,GACIqG,IAAK,SAAAC,GAAUzB,EAAK0B,YAAcD,GAClCrG,YAAY,2BACZ2E,MAAOvB,EAAa,GACpBmD,SAAU,SAAA9K,GAAC,OAAIyK,EAAgBzK,EAAE+K,OAAO7B,MAAQ,CAAClJ,EAAE+K,OAAO7B,OAAS,KACnE8B,aAAc,kBAAM7B,EAAKzB,aAAaC,EAAcC,IACpDhF,MAAO,CAAE0H,MAAO,IAAKW,aAAc,EAAGC,QAAS,WAEnD9I,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAUF,QAAS,kBAAMkG,EAAKzB,aAAaC,EAAcC,IAAUxE,KAAK,SAASqG,KAAK,QAAQ7G,MAAO,CAAE0H,MAAO,GAAIJ,YAAa,IAA5I,gBACA9H,EAAAC,EAAAC,cAAAS,EAAA,GAAQE,QAAS,kBAAMkG,EAAKtB,YAAYC,IAAe2B,KAAK,QAAQ7G,MAAO,CAAE0H,MAAO,KAApF,kBAGRa,WAAY,SAAAC,GAAQ,OAChBhJ,EAAAC,EAAAC,cAAAc,EAAA,GAAMD,KAAK,SAASP,MAAO,CAAEyI,MAAOD,EAAW,eAAYxE,MAE/D0E,SAAU,SAACpC,EAAOf,GAAR,OACNA,EAAOvH,KACF2K,WACAC,cACAC,SAASvC,EAAMsC,gBAExBE,8BAA+B,SAAA5L,GACvBA,GACA6L,WAAW,kBAAMxC,EAAK0B,YAAYe,cAG9CxJ,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,iCAAQ2H,UAAU,UAAUvF,IAAI,UAAUwF,MAAM,MAAM9C,QAASrF,KAAKtC,MAAM2H,QAAS8D,SAAU,SAACpC,EAAOf,GAAR,OAAmBA,EAAOrH,QAAQ2K,SAASvC,IAAQiC,WAAY,SAAAC,GAAQ,OACpLhJ,EAAAC,EAAAC,cAAAc,EAAA,GAAMD,KAAK,SAASP,MAAO,CAAEyI,MAAOD,EAAW,eAAYxE,QAE/DxE,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,iCAAQ2H,UAAU,UAAUvF,IAAI,UAAUwF,MAAM,MAAMuB,OAAQ,SAAC5C,EAAMd,GAAP,OAC9E/F,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAAkB,EAAA,OACIpB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKmI,KAAM,IAEH3D,EAAOpH,QAAQ4D,IAAI,SAAAC,GACf,OAAOxC,EAAAC,EAAAC,cAAAqB,EAAA,GAAKmI,KAAM,GAAIhH,IAAKF,EAAMhC,MAAO,CAAEmJ,UAAW,EAAGd,aAAc,IAAK7I,EAAAC,EAAAC,cAAA0J,EAAA,OAAMpH,OAI7FxC,EAAAC,EAAAC,cAAAqB,EAAA,GAAKmI,KAAM,GACP1J,EAAAC,EAAAC,cAAC2J,EAAD,CAASnG,GAAIqC,EAAOrC,GAAI/E,QAASoH,EAAOpH,QAAS2D,MAAOyE,EAAKtJ,MAAM6E,cAKnFtC,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,2BAAO2H,UAAU,WAAWvF,IAAI,WAAW+G,OAAQ,SAAC5C,EAAMd,GAAP,OACnE/F,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAAkB,EAAA,OACIpB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKmI,KAAM,IACP1J,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEsJ,UAAW,YAAaC,aAAc,eAC/ChE,EAAOnH,WAGhBoB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKmI,KAAM,GACP1J,EAAAC,EAAAC,cAAC8J,EAAD,CAAUtG,GAAIqC,EAAOrC,WAKrC1D,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,sEAAe2H,UAAU,YAAYvF,IAAI,YAAYwF,MAAM,MAAMuB,OAAQ,SAAC5C,EAAMd,GAAP,OACzF/F,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAAkB,EAAA,OACIpB,EAAAC,EAAAC,cAAAqB,EAAA,OACKwE,EAAO2B,WAEZ1H,EAAAC,EAAAC,cAAAqB,EAAA,OACKoG,IAAO5B,EAAO0B,aAAaG,OAAO,6BAKnD5H,EAAAC,EAAAC,cAAA8G,EAAA,EAAOgB,OAAP,CAAc1H,MAAM,eAAK2H,UAAU,SAASvF,IAAI,SAASwF,MAAM,KAAKuB,OAAQ,SAAC5C,EAAMd,GAC/E,OAAOgB,EAAKtJ,MAAM0H,WAAWb,QAAU,EACnCtE,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3H,MAAOyE,EAAKtJ,MAAM6E,MAAOoB,GAAIqC,EAAOrC,GAAIyB,WAAY4B,EAAKtJ,MAAM0H,aACrEnF,EAAAC,EAAAC,cAAAgK,EAAA,GAASnJ,KAAK,aACdf,EAAAC,EAAAC,cAAAiK,EAAA,GAAY7J,MAAM,2BAAO8J,WAAW,eAAKC,OAAO,eAAKC,UAAW,kBAAMvD,EAAKpB,aAAaI,KACpF/F,EAAAC,EAAAC,cAAAE,EAAA,GAASC,UAAU,SAASC,MAAM,2BAAOC,oBAAkB,GACvDP,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,SAASC,KAAK,cAIvC,SAGZhB,EAAAC,EAAAC,cAAAqK,EAAA,a,GAvNYlH,IAAMC,W,mBCLxBjG,GAAWC,EAAA,EAAKC,K,IAMhBiN,G,2MACF/M,MAAQ,CACJC,SAAS,G,EAGb+M,WAAa,SAAC7M,GACVA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GACrCD,GACDE,IACKC,KAAK,mBAAoBC,IAAGC,UAAU,CACnCmM,SAAU5M,EAAKC,MAAMC,KAAKS,cAAc,YACxCkM,SAAU7M,EAAKC,MAAMC,KAAKS,cAAc,YACxCmM,IAAK9M,EAAKC,MAAMC,KAAKS,cAAc,UAEtCI,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,OACTC,OAAOC,SAASC,SAEhBC,EAAA,EAAaC,MAAM,CACfC,QAAS,2BACTC,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAGnBC,MAAM,SAAAxB,GACLyB,QAAQC,IAAI1B,Q,wEAMtB,IApCK2B,EAoCNC,EAAAC,KACL,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACHH,EAAAC,EAAAC,cAAA,KAAGW,QAAS,kBAAMf,EAAKgB,SAAS,CAAEpD,SAAS,KAASqD,KAAK,WAAzD,4BACAf,EAAAC,EAAAC,cAAAe,EAAA,GAAOvD,QAASqC,KAAKtC,MAAMC,QAASwD,OAAQ,KAAMC,SAAU,kBAAMrB,EAAKgB,SAAS,CAAEpD,SAAS,MACvFsC,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAK0K,YACjBzK,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEqK,OAAQ,SAAUC,UAAW,WACvC9K,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEmJ,UAAW,GAAIoB,SAAU,GAAIC,WAAY,MAArD,6BAEJhL,EAAAC,EAAAC,cAAC+K,GAAD,KACKlL,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,gDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOC,YAAY,qBAAMC,YAAU,MAG3CpC,EAAAC,EAAAC,cAAC+K,GAAD,KACKlL,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,gDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOnB,KAAK,WAAWmK,aAAa,OAAO/I,YAAY,qBAAMC,YAAU,MAG/EpC,EAAAC,EAAAC,cAAC+K,GAAD,KACKlL,KAAKhC,MAAMC,KAAK+D,kBAAkB,MAAO,CACtCC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,gDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOnB,KAAK,WAAWmK,aAAa,OAAO/I,YAAY,qBAAMC,YAAU,MAG/EpC,EAAAC,EAAAC,cAAC+K,GAAD,KACIjL,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAClCnC,UA3EjBf,EA2EqCE,KAAKhC,MAAMC,KAAKgF,iBA1E7DC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OAyE9B,2B,GAtETC,IAAMC,WAmFd6H,GAFE7N,EAAA,EAAKkG,QAALlG,CAAckN,ICrFzBnN,GAAWC,EAAA,EAAKC,K,IAMhB6N,G,2MACFzN,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAKC,GACrCD,GACDE,IACKC,KAAK,gBAAiBC,IAAGC,UAAU,CAChCmM,SAAU5M,EAAKC,MAAMC,KAAKS,cAAc,YACxCkM,SAAU7M,EAAKC,MAAMC,KAAKS,cAAc,eAE3CI,KAAK,SAAAC,GACsB,IAApBA,EAAIC,KAAKC,QACTkH,IAAQmF,IAAI,OAAQ,SAAU,CAAEC,QAAS,IAAIC,KAAKzM,EAAIC,KAAKyM,QAASnF,OAAQC,SAASD,SACrFpH,OAAOC,SAASC,UACW,IAApBL,EAAIC,KAAKC,OAChBI,EAAA,EAAaC,MAAM,CACfC,QAAS,qBACTC,YAAa,GACbE,SAAU,IAGdL,EAAA,EAAaC,MAAM,CACfC,QAASmM,SAAS3M,EAAIC,KAAKS,OAAOkM,QAAQ,OAAQ,OAClDnM,YAAaT,EAAIC,KAAKS,OACtBC,SAAU,MAIrBC,MAAM,SAAAxB,GACHyB,QAAQC,IAAI1B,Q,wFAODsG,GAAvB0B,IAAQF,IAAI,SACZ/G,OAAOC,SAASC,W,+BAKpB,OAAOa,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,SAASd,MAAO,CAAEmL,SAAU,WAAYC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGlB,OAAQ,SACjI7K,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAC1C7B,EAAAC,EAAAC,cAAA8L,GAAA,GAAMC,UAAW,CAAE3D,QAAS,GAAK9H,MAAO,CAAE0L,UAAW,oBAAsBC,UAAU,GACjFnM,EAAAC,EAAAC,cAAAkB,EAAA,GAAKL,KAAK,OAAOM,QAAQ,SAASC,MAAM,UACpCtB,EAAAC,EAAAC,cAAAqB,EAAA,GAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,IAC9C7B,EAAAC,EAAAC,cAAA5C,EAAA,GAAMwE,SAAU/B,KAAKpC,cACjBqC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEqK,OAAQ,SAAUC,UAAW,WACvC9K,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEmJ,UAAW,GAAIoB,SAAU,GAAIC,WAAY,MAArD,kBAEJhL,EAAAC,EAAAC,cAACkM,GAAD,KACKrM,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAM3C,QAAS,gDAFhCS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOE,YAAU,EAACiK,OAAQrM,EAAAC,EAAAC,cAAAc,EAAA,GAAMD,KAAK,SAAWoB,YAAY,yBAGpEnC,EAAAC,EAAAC,cAACkM,GAAD,KACKrM,KAAKhC,MAAMC,KAAK+D,kBAAkB,WAAY,CAC3CC,MAAO,CAAC,CACJC,UAAU,EAAMqK,YAAY,EAAMhN,QAAS,0CAFlDS,CAKGC,EAAAC,EAAAC,cAAAgC,EAAA,GAAOE,YAAU,EAAC8I,aAAa,OAAOnK,KAAK,WAAWsL,OAAQrM,EAAAC,EAAAC,cAAAc,EAAA,GAAMD,KAAK,SAAWoB,YAAY,mBAGxGnC,EAAAC,EAAAC,cAACkM,GAAD,KACIpM,EAAAC,EAAAC,cAACqM,GAAD,MACAvM,EAAAC,EAAAC,cAAAS,EAAA,GAAQI,KAAK,UAAU+B,OAAK,EAACC,SAAS,SAASnC,UA3EhEf,EA2EoFE,KAAKhC,MAAMC,KAAKgF,iBA1E5GC,OAAOC,KAAKrD,GAAasD,KAAK,SAAAC,GAAK,OAAIvD,EAAYuD,OA0E1B,wBA3EpC,IAAmBvD,M,GAIIwD,IAAMC,WAoFdkJ,GAFDlP,EAAA,EAAKkG,QAALlG,CAAc8N,IC9EbqB,OAZf,WASI,YAN4BjI,IAAxB0B,IAAQF,IAAI,QAMDhG,EAAAC,EAAAC,cAACwM,GAAD,MAAkB1M,EAAAC,EAAAC,cAACyM,GAAD,O,UCEtBC,GAVC,kBACZ5M,EAAAC,EAAAC,cAAA2M,EAAA,GAAgBC,OAAQC,MACpB/M,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,KACIhN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,KACIjN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,OAAK,EAAC9G,KAAK,IAAI+G,UAAWV,SCNjDhD,iBACIzJ,EAAAC,EAAAC,cAACkN,GAAD,MACA9G,SAAS+G,eAAe,W","file":"static/js/main.e6e3266e.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass AddForm extends React.Component {\n    state = {\n        visible: false\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fly\n                    .post('/tasks/add/', qs.stringify({\n                        name: this.props.form.getFieldValue('name'),\n                        manager: this.props.form.getFieldValue('manager'),\n                        members: this.props.form.getFieldValue('members'),\n                        progress: this.props.form.getFieldValue('progress')\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            window.location.reload()\n                        } else {\n                            notification.error({\n                                message: '添加失败',\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    render() {\n        return <Fragment>\n            <Tooltip placement=\"bottom\" title=\"添加项目\" arrowPointAtCenter>\n                <div style={{float: \"left\", marginLeft: 15}}><Button disabled={this.state.visible} onClick={() => this.setState({ visible: true })} type=\"primary\" icon='plus' /></div>\n            </Tooltip>\n            <Modal visible={this.state.visible} footer={null} onCancel={() => this.setState({ visible: false })}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('name', {\n                                    rules: [{\n                                        required: true, message: '项目名称不能为空'\n                                    }]\n                                })(\n                                    <Input placeholder=\"项目名称\" allowClear/>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('manager', {\n                                    rules: [{\n                                        required: true, message: '项目负责人不能为空'\n                                    }]\n                                })(\n                                    <Select placeholder=\"项目负责人\" allowClear>\n                                        {\n                                            this.props.users.map(item => {\n                                                return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                            })\n                                        }\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('members', {\n                                    rules: [{\n                                        required: true, message: '项目参与人不能为空'\n                                    }]\n                                })(\n                                    <Select mode=\"multiple\" placeholder=\"项目参与人\" allowClear>\n                                        {\n                                            this.props.users.map(item => {\n                                                return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                            })\n                                        }\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('progress', {\n                                    rules: [{\n                                        required: true, message: '项目进度不能为空'\n                                    }]\n                                })(\n                                    <Input.TextArea autosize placeholder=\"项目进度\" />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button type=\"primary\" block htmlType=\"submit\"\n                                    disabled={hasErrors(this.props.form.getFieldsError())}>保 存</Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n    }\n}\n\nconst Add = Form.create()(AddForm);\n\nexport default Add","import React, { Fragment } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Select, Tooltip, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass EditForm extends React.Component {\n    state = {\n        visible: false\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fly\n                    .post('/tasks/update/'+ this.props.id +'/', qs.stringify({\n                        name: this.props.form.getFieldValue('name'),\n                        manager: this.props.form.getFieldValue('manager')\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            window.location.reload()\n                        } else {\n                            notification.error({\n                                message: '修改失败',\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    render() {\n        return <Fragment>\n            <Tooltip placement=\"bottom\" title=\"修改项目\" arrowPointAtCenter>\n                <Button disabled={this.state.visible} onClick={() => this.setState({ visible: true })} type=\"primary\" icon='edit' />\n            </Tooltip>\n            <Modal visible={this.state.visible} footer={null} onCancel={() => this.setState({ visible: false })}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('name')(\n                                    <Input placeholder=\"项目名称\" allowClear/>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('manager')(\n                                    <Select placeholder=\"项目负责人\" allowClear>\n                                        {\n                                            this.props.users.map(item => {\n                                                return <Select.Option key={item[0]}>{item[1]}</Select.Option>\n                                            })\n                                        }\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button type=\"primary\" block htmlType=\"submit\"\n                                    disabled={hasErrors(this.props.form.getFieldsError())}>修 改</Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n    }\n}\n\nconst Edit = Form.create()(EditForm);\n\nexport default Edit","import React, { Fragment } from 'react'\nimport { Row, Col, Form, Modal, Input, Button, Tooltip, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass ProgressForm extends React.Component {\n    state = {\n        visible: false\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fly\n                    .post('/tasks/progress/'+ this.props.id +'/', qs.stringify({\n                        progress: this.props.form.getFieldValue('progress')\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            window.location.reload()\n                        } else {\n                            notification.error({\n                                message: '进度更新失败',\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    render() {\n        return <Fragment>\n            <Tooltip placement=\"bottom\" title=\"更新进度\" arrowPointAtCenter>\n                <Button disabled={this.state.visible} onClick={() => this.setState({ visible: true })} type=\"primary\" icon='plus-circle' />\n            </Tooltip>\n            <Modal visible={this.state.visible} footer={null} onCancel={() => this.setState({ visible: false })}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('progress', {\n                                    rules: [{\n                                        required: true, message: '项目进度不能为空'\n                                    }]\n                                })(\n                                    <Input.TextArea autosize placeholder=\"项目进度\" />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button type=\"primary\" block htmlType=\"submit\"\n                                    disabled={hasErrors(this.props.form.getFieldsError())}>修 改</Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n    }\n}\n\nconst Progress = Form.create()(ProgressForm);\n\nexport default Progress","import React, { Fragment } from 'react'\nimport { Row, Col, Form, Modal, Button, Tooltip, notification, Select } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass MembersForm extends React.Component {\n    state = {\n        visible: false\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                const a = this.props.members;\n                const b = this.props.form.getFieldValue('members');\n\n                //a与b不重复的部分\n                function inANotInB(a, b) {\n                    const obj = new Object();\n                    for (let i = 0, len = a.length; i < len; i++) {\n                        obj[a[i]] = 1;\n                    }\n                    for (let i = 0, len = b.length; i < len; i++) {\n                        if (obj.hasOwnProperty(b[i])) {\n                            obj[b[i]] = undefined;\n                        }\n                    }\n                    const arr = new Array();\n                    let i = 0;\n                    for (var per in obj) {\n                        if (obj[per]) {\n                            arr[i++] = per;\n                        }\n                    }\n                    return arr;\n                }\n\n                //b与a不重复的部分\n                function inBNotInA(a, b) {\n                    const obj = new Object();\n                    for (let i = 0, len = b.length; i < len; i++) {\n                        obj[b[i]] = 1;\n                    }\n                    for (let i = 0, len = a.length; i < len; i++) {\n                        if (obj.hasOwnProperty(a[i])) {\n                            obj[a[i]] = undefined;\n                        }\n                    }\n                    const arr = new Array();\n                    let i = 0;\n                    for (let per in obj) {\n                        if (obj[per]) {\n                            arr[i++] = per;\n                        }\n                    }\n                    return arr;\n                }\n\n                var del = inANotInB(a, b);\n                var add = inBNotInA(a, b);\n\n                fly\n                    .post('/tasks/members/' + this.props.id + '/', qs.stringify({\n                        add: add,\n                        del: del\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            window.location.reload()\n                        } else {\n                            notification.error({\n                                message: '进度更新失败',\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    render() {\n        return <Fragment>\n            <Tooltip placement=\"bottom\" title=\"修改参与人\" arrowPointAtCenter>\n                <Button disabled={this.state.visible} onClick={() => this.setState({ visible: true })} type=\"primary\" icon='plus-circle' />\n            </Tooltip>\n            <Modal visible={this.state.visible} footer={null} onCancel={() => this.setState({ visible: false })}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('members', {\n                                    initialValue: this.props.members\n                                })(\n                                    <Select allowClear mode=\"multiple\" placeholder=\"项目参与人\">\n                                        {\n                                            this.props.users.map(item => {\n                                                return <Select.Option key={item[1]}>{item[1]}</Select.Option>\n                                            })\n                                        }\n                                    </Select>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button type=\"primary\" block htmlType=\"submit\"\n                                    disabled={hasErrors(this.props.form.getFieldsError())}>修 改</Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n    }\n}\n\nconst Members = Form.create()(MembersForm);\n\nexport default Members","import React, { Fragment } from 'react'\nimport { Button, Table, notification, Popconfirm, BackTop, Tooltip, Divider, Row, Col, Tag, Timeline, Input, Icon } from 'antd'\nimport fly from 'flyio'\nimport Add from './Add'\nimport Edit from './Edit'\nimport Progress from './Progress'\nimport Members from './Members'\nimport moment from 'moment'\nimport Cookies from 'js-cookie'\n\nclass TableData extends React.Component {\n    state = {\n        dataSource: [],\n        users: [],\n        progress: [],\n        filters: [],\n        searchText: \"\"\n    }\n\n    async getData() {\n        await fly\n            .get('/tasks/all/')\n            .then(res => {\n                this.setState({ dataSource: res.data.tasks });\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    async getUsers() {\n        await fly\n            .get('/users/all')\n            .then(res => {\n                for (let key in res.data.users) {\n                    res.data.users[key] = { ...res.data.users[key] }\n                }\n                this.setState({ users: res.data.users });\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    async componentDidMount() {\n        if (Cookies.get('name') === undefined) {\n            window.location.reload()\n        } else {\n            await this.getData()\n            await this.getUsers()\n            let filters = [];\n            for (let key in this.state.users) {\n                filters.push({ text: this.state.users[key][1], value: this.state.users[key][1] })\n            }\n            this.setState({ filters: filters })\n        }\n    }\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: \"\" });\n    };\n\n    handleDelete = row => {\n        fly\n            .post('/tasks/delete/' + row.id + '/')\n            .then(res => {\n                if (res.data.status === 1) {\n                    window.location.reload()\n                } else {\n                    notification.error({\n                        message: '删除失败',\n                        description: res.data.reason,\n                        duration: 2\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    handleExpand = (expanded, record) => {\n        fly\n            .get('/tasks/progresses/' + record.id + '/')\n            .then(res => {\n                this.setState({ progress: res.data.progress });\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleClick = () => {\n        fly\n            .get('/users/logout/')\n            .then(() => {\n                Cookies.remove('name', { path: '/', domain: document.domain })\n                window.location.reload()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return <Fragment>\n            <Table\n                dataSource={this.state.dataSource}\n                rowKey=\"id\"\n                pagination={{ simple: true, total: this.state.dataSource.length, size: 'small', pageSize: 20 }}\n                expandedRowRender={() =>\n                    <Timeline>\n                        {\n                            this.state.progress.map(item => {\n                                return <Timeline.Item key={item.last_update}>{item.progress}--->{item.submitter}{moment(item.last_update).format('YYYY-MM-DD HH:mm:ss')}</Timeline.Item>\n                            })\n                        }\n                    </Timeline>}\n                title={() => <Row>\n                    <Add users={this.state.users} dataSource={this.state.dataSource} />\n                    <Tooltip placement=\"bottom\" title=\"登出\" arrowPointAtCenter>\n                        <div style={{ float: \"right\", marginRight: 15 }}><Button type=\"danger\" icon='logout' onClick={this.handleClick} /></div>\n                    </Tooltip>\n                </Row>}\n                onExpand={this.handleExpand}\n            >\n                {/* <Column title=\"ID\" dataIndex=\"id\" key=\"id\" width='8%' /> */}\n                <Table.Column title=\"项目名称\" dataIndex=\"name\" key=\"name\" width='13%' filterDropdown={({\n                    setSelectedKeys,\n                    selectedKeys,\n                    confirm,\n                    clearFilters\n                }) => (\n                        <div style={{ padding: 8 }}>\n                            <Input\n                                ref={node => { this.searchInput = node; }}\n                                placeholder=\"项目搜索\"\n                                value={selectedKeys[0]}\n                                onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                                onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n                                style={{ width: 188, marginBottom: 8, display: \"block\" }}\n                            />\n                            <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm)} icon=\"search\" size=\"small\" style={{ width: 90, marginRight: 8 }}>搜索</Button>\n                            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>重置</Button>\n                        </div>\n                    )}\n                    filterIcon={filtered => (\n                        <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n                    )}\n                    onFilter={(value, record) =>\n                        record.name\n                            .toString()\n                            .toLowerCase()\n                            .includes(value.toLowerCase())\n                    }\n                    onFilterDropdownVisibleChange={visible => {\n                        if (visible) {\n                            setTimeout(() => this.searchInput.select());\n                        }\n                    }} />\n                <Table.Column title=\"项目负责人\" dataIndex=\"manager\" key=\"manager\" width='10%' filters={this.state.filters} onFilter={(value, record) => record.manager.includes(value)} filterIcon={filtered => (\n                    <Icon type=\"filter\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n                )} />\n                <Table.Column title=\"项目参与人\" dataIndex=\"members\" key=\"members\" width='14%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={22}>\n                                {\n                                    record.members.map(item => {\n                                        return <Col span={10} key={item} style={{ marginTop: 3, marginBottom: 3 }}><Tag>{item}</Tag></Col>\n                                    })\n                                }\n                            </Col>\n                            <Col span={2}>\n                                <Members id={record.id} members={record.members} users={this.state.users} />\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度\" dataIndex=\"progress\" key=\"progress\" render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col span={22}>\n                                <div style={{ wordBreak: 'break-all', overflowWrap: 'break-word' }}>\n                                    {record.progress}\n                                </div>\n                            </Col>\n                            <Col span={2}>\n                                <Progress id={record.id} />\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"项目进度修改人/修改时间\" dataIndex=\"submitter\" key=\"submitter\" width='15%' render={(text, record) => (\n                    <Fragment>\n                        <Row>\n                            <Col>\n                                {record.submitter}\n                            </Col>\n                            <Col>\n                                {moment(record.last_update).format('YYYY-MM-DD HH:mm:ss')}\n                            </Col>\n                        </Row>\n                    </Fragment>\n                )} />\n                <Table.Column title=\"操作\" dataIndex=\"option\" key=\"option\" width='9%' render={(text, record) => {\n                    return this.state.dataSource.length >= 1 ? (\n                        <Fragment>\n                            <Edit users={this.state.users} id={record.id} dataSource={this.state.dataSource} />\n                            <Divider type=\"vertical\" />\n                            <Popconfirm title=\"确认删除\" cancelText='取消' okText='确定' onConfirm={() => this.handleDelete(record)}>\n                                <Tooltip placement=\"bottom\" title=\"删除项目\" arrowPointAtCenter>\n                                    <Button type=\"danger\" icon=\"delete\" />\n                                </Tooltip>\n                            </Popconfirm>\n                        </Fragment>\n                    ) : null\n                }} />\n            </Table>\n            <BackTop />\n        </Fragment>\n    }\n}\n\nexport default TableData","import React, { Fragment } from 'react'\nimport { Row, Col, Form, Input, Button, notification, Modal } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass PassForm extends React.Component {\n    state = {\n        visible: false\n    }\n\n    handleEdit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fly\n                    .post('/users/password/', qs.stringify({\n                        username: this.props.form.getFieldValue('username'),\n                        password: this.props.form.getFieldValue('password'),\n                        new: this.props.form.getFieldValue('new')\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            window.location.reload()\n                        } else {\n                            notification.error({\n                                message: '修改失败',\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    render() {\n        return <Fragment>\n            <a onClick={() => this.setState({ visible: true })} type=\"primary\">修改密码</a>\n            <Modal visible={this.state.visible} footer={null} onCancel={() => this.setState({ visible: false })}>\n                <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                        <Form onSubmit={this.handleEdit}>\n                            <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                                <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>修改密码</p>\n                            </div>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('username', {\n                                    rules: [{\n                                        required: true, message: '用户名不能为空'\n                                    }]\n                                })(\n                                    <Input placeholder=\"用户名\" allowClear />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('password', {\n                                    rules: [{\n                                        required: true, message: '原密码不能为空'\n                                    }]\n                                })(\n                                    <Input type='password' autoComplete=\"true\" placeholder=\"原密码\" allowClear />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {this.props.form.getFieldDecorator('new', {\n                                    rules: [{\n                                        required: true, message: '新密码不能为空'\n                                    }]\n                                })(\n                                    <Input type='password' autoComplete=\"true\" placeholder=\"新密码\" allowClear />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                <Button type=\"primary\" block htmlType=\"submit\"\n                                    disabled={hasErrors(this.props.form.getFieldsError())}>提 交</Button>\n                            </FormItem>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n    }\n}\n\nconst Password = Form.create()(PassForm);\n\nexport default Password","import React from 'react'\nimport { Row, Col, Card, Form, Input, Icon, Button, notification } from 'antd'\nimport fly from 'flyio'\nimport qs from 'querystring'\nimport Cookies from 'js-cookie'\nimport Password from './Password'\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass SignForm extends React.Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fly\n                    .post('/users/login/', qs.stringify({\n                        username: this.props.form.getFieldValue('username'),\n                        password: this.props.form.getFieldValue('password')\n                    }))\n                    .then(res => {\n                        if (res.data.status === 1) {\n                            Cookies.set('name', 'adinno', { expires: new Date(res.data.expiry), domain: document.domain })\n                            window.location.reload()\n                        } else if (res.data.status === 2) {\n                            notification.error({\n                                message: '已登录',\n                                description: '',\n                                duration: 2\n                            })\n                        } else {\n                            notification.error({\n                                message: unescape(res.data.reason.replace(/\\\\u/g, '%u')),\n                                description: res.data.reason,\n                                duration: 2\n                            })\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            }\n        })\n    };\n\n    componentDidMount() {\n        if (Cookies.get('name') != undefined) {\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, margin: 'auto' }}>\n            <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\n                <Card bodyStyle={{ padding: 0 }} style={{ boxShadow: '0 0 10px #888888' }} bordered={false}>\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                        <Col xs={22} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                            <Form onSubmit={this.handleSubmit}>\n                                <div style={{ margin: '0 auto', textAlign: 'center' }}>\n                                    <p style={{ marginTop: 20, fontSize: 20, fontWeight: 600 }}>登 录</p>\n                                </div>\n                                <FormItem>\n                                    {this.props.form.getFieldDecorator('username', {\n                                        rules: [{\n                                            required: true, message: '用户名不能为空'\n                                        }]\n                                    })(\n                                        <Input allowClear prefix={<Icon type=\"user\" />} placeholder=\"用户名\" />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                    {this.props.form.getFieldDecorator('password', {\n                                        rules: [{\n                                            required: true, whitespace: true, message: '密码不能为空'\n                                        }]\n                                    })(\n                                        <Input allowClear autoComplete=\"true\" type=\"password\" prefix={<Icon type=\"lock\" />} placeholder=\"密码\" />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                    <Password />\n                                    <Button type=\"primary\" block htmlType=\"submit\" disabled={hasErrors(this.props.form.getFieldsError())}>登 录</Button>\n                                </FormItem>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Card>\n            </Col>\n        </Row>\n    }\n}\n\nconst Login = Form.create()(SignForm);\n\nexport default Login","import React from 'react'\nimport TableData from '../components/TableData'\nimport Login from '../components/Login'\nimport Cookies from 'js-cookie'\n\nfunction index() {\n    let cook;\n\n    if (Cookies.get('name') === undefined) {\n        cook = false;\n    } else {\n        cook = true;\n    }\n\n    return cook ? (<TableData />) : (<Login />)\n}\n\nexport default index","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport index from '../views/index'\nimport zhCN from 'antd/es/locale/zh_CN'\nimport { ConfigProvider } from 'antd'\n\nconst Routers = () => (\n    <ConfigProvider locale={zhCN}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={index} />\n            </Switch>\n        </Router>\n    </ConfigProvider>\n);\n\nexport default Routers","import React from 'react'\nimport { render } from 'react-dom'\nimport Routers from './router/index'\n\nrender(\n    <Routers />,\n    document.getElementById('root')\n);"],"sourceRoot":""}